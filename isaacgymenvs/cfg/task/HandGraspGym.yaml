# used to create the object
name: HandGraspGym

physics_engine: ${..physics_engine}

# if given, will override the device setting in gym.
env:
  test: ${resolve_default:False,${...test}}
  numEnvs: ${resolve_default:2048,${...num_envs}}
  envSpacing: 5
  episodeLength: 60 
  cameraFollow: True # if the camera follows humanoid or not
  enableDebugVis: False
  
  pdControl: True
  powerScale: 1.0
  controlFrequencyInv: 2 # 30 Hz

  localRootObs: False
  contactBodies: [
    "palm", 
    "thumb0", "thumb1", "thumb2", "thumb3",
    "index0", "index1", "index2", "index3",
    "middle0", "middle1", "middle2", "middle3",
    "ring0", "ring1", "ring2", "ring3",
    "pinky0", "pinky1", "pinky2", "pinky3"]
  terminationHeight: 0.5
  enableEarlyTermination: False


  plane:
    staticFriction: 1.0
    dynamicFriction: 1.0
    restitution: 0.0
misc:
  init_rfingers_rot: [
    [ 7.2939e-01,  7.8175e-02, -1.0776e-01,  6.7102e-01],
    [ 7.2939e-01,  7.8195e-02, -1.0778e-01,  6.7102e-01],
    [ 7.2938e-01,  7.8203e-02, -1.0779e-01,  6.7102e-01],
    [ 7.2938e-01,  7.8206e-02, -1.0779e-01,  6.7102e-01],
    [ 7.0442e-01,  6.1617e-02,  6.1640e-02,  7.0441e-01],
    [ 7.0442e-01,  6.1617e-02,  6.1640e-02,  7.0441e-01],
    [ 7.0442e-01,  6.1617e-02,  6.1640e-02,  7.0441e-01],
    [ 7.0442e-01,  6.1617e-02,  6.1640e-02,  7.0441e-01],
    [-6.9722e-01,  1.1248e-05, -1.0911e-05, -7.1686e-01],
    [-6.9722e-01,  1.1248e-05, -1.0911e-05, -7.1685e-01],
    [-6.9722e-01,  1.1248e-05, -1.0911e-05, -7.1685e-01],
    [-6.9722e-01,  1.1248e-05, -1.0911e-05, -7.1685e-01],
    [ 7.0442e-01, -6.1639e-02, -6.1618e-02,  7.0441e-01],
    [ 7.0442e-01, -6.1639e-02, -6.1618e-02,  7.0441e-01],
    [ 7.0442e-01, -6.1639e-02, -6.1618e-02,  7.0441e-01],
    [ 7.0442e-01, -6.1639e-02, -6.1618e-02,  7.0441e-01],
    [ 7.0442e-01, -6.1639e-02, -6.1618e-02,  7.0441e-01],
    [ 7.0442e-01, -6.1639e-02, -6.1618e-02,  7.0441e-01],
    [ 7.0442e-01, -6.1639e-02, -6.1618e-02,  7.0441e-01],
    [ 7.0442e-01, -6.1639e-02, -6.1618e-02,  7.0441e-01]
  ]
  
  init_lfingers_rot: [
    [ 7.8178e-02,  6.7103e-01,  7.2938e-01, -1.0775e-01],
    [ 7.8196e-02,  6.7103e-01,  7.2937e-01, -1.0777e-01],
    [ 7.8204e-02,  6.7103e-01,  7.2937e-01, -1.0778e-01],
    [ 7.8207e-02,  6.7103e-01,  7.2937e-01, -1.0779e-01],
    [ 6.1616e-02,  7.0442e-01,  7.0441e-01,  6.1640e-02],
    [ 6.1616e-02,  7.0442e-01,  7.0441e-01,  6.1640e-02],
    [ 6.1616e-02,  7.0442e-01,  7.0441e-01,  6.1640e-02],
    [ 6.1616e-02,  7.0442e-01,  7.0441e-01,  6.1640e-02],
    [-1.1572e-05,  6.9722e-01,  7.1685e-01,  1.1126e-05],
    [-1.1572e-05,  6.9722e-01,  7.1685e-01,  1.1126e-05],
    [-1.1572e-05,  6.9722e-01,  7.1685e-01,  1.1126e-05],
    [-1.1572e-05,  6.9722e-01,  7.1685e-01,  1.1126e-05],
    [-6.1639e-02,  7.0442e-01,  7.0441e-01, -6.1618e-02],
    [-6.1639e-02,  7.0442e-01,  7.0441e-01, -6.1618e-02],
    [-6.1639e-02,  7.0442e-01,  7.0441e-01, -6.1618e-02],
    [-6.1639e-02,  7.0442e-01,  7.0441e-01, -6.1618e-02],
    [-6.1639e-02,  7.0442e-01,  7.0441e-01, -6.1618e-02],
    [-6.1639e-02,  7.0442e-01,  7.0441e-01, -6.1618e-02],
    [-6.1639e-02,  7.0442e-01,  7.0441e-01, -6.1618e-02],
    [-6.1639e-02,  7.0442e-01,  7.0441e-01, -6.1618e-02]
  ]

sim:
  dt: 0.0166 # 1/60 s
  substeps: 2
  up_axis: "z"
  use_gpu_pipeline: ${eq:${...pipeline},"gpu"}
  gravity: [0.0, 0.0, -9.81]
  physx:
    num_threads: ${....num_threads}
    solver_type: ${....solver_type}
    use_gpu: ${contains:"cuda",${....sim_device}} # set to False to run on CPU
    num_position_iterations: 8
    num_velocity_iterations: 0
    contact_offset: 0.02
    rest_offset: 0.0
    bounce_threshold_velocity: 0.2
    max_depenetration_velocity: 1000.0
    default_buffer_size_multiplier: 5.0
    max_gpu_contact_pairs: 8388608 # 8*1024*1024
    num_subscenes: ${....num_subscenes}
    contact_collection: 2 # 0: CC_NEVER (don't collect contact info), 1: CC_LAST_SUBSTEP (collect only contacts on last substep), 2: CC_ALL_SUBSTEPS (default - all contacts)

task:
  randomize: False
  randomization_params:
    # specify which attributes to randomize for each actor type and property
    frequency: 600   # Define how many environment steps between generating new randomizations
    observations:
      range: [0, .002] # range for the white noise
      operation: "additive"
      distribution: "gaussian"
    actions:
      range: [0., .02]
      operation: "additive"
      distribution: "gaussian"
    sim_params: 
      gravity:
        range: [0, 0.4]
        operation: "additive"
        distribution: "gaussian"
        schedule: "linear"  # "linear" will linearly interpolate between no rand and max rand
        schedule_steps: 3000
    actor_params:
      humanoid:
        color: True
        rigid_body_properties:
          mass: 
            range: [0.5, 1.5]
            operation: "scaling"
            distribution: "uniform"
            setup_only: True # Property will only be randomized once before simulation is started. See Domain Randomization Documentation for more info.
            schedule: "linear"  # "linear" will linearly interpolate between no rand and max rand
            schedule_steps: 3000
        rigid_shape_properties:
          friction:
            num_buckets: 500
            range: [0.7, 1.3]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000
          restitution:
            range: [0., 0.7]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000
        dof_properties:
          damping: 
            range: [0.5, 1.5]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000
          stiffness: 
            range: [0.5, 1.5]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000
          lower:
            range: [0, 0.01]
            operation: "additive"
            distribution: "gaussian"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000
          upper:
            range: [0, 0.01]
            operation: "additive"
            distribution: "gaussian"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000

